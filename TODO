Meta Scaffold
-------------
 * Permitir que se puedan construir bd incrementales:
 	- Comprobar estado actual de la aplicación.
 	- Comparar con el nuevo estado deseado.
 	- Implementar cambios.
 		- new models
 		- delete models
 		- modify models
 * Método simple para manejar las Inflections incorrectas.
 * Inducir modelos y controladores en lugar de usar generators de código (Decidir si usamos los MagicModels del DrNic).
 * Generar código a partir de dbdesigner http://wiki.rubyonrails.org/rails/pages/DBModelGem
 * Scaffold propio XHTML simple y muy configurable mediante CSS.
 * Test.
 * Documentación.

Meta Querier
-------------
 * Fix error de seguridad en meta_querier_helper.rb: 109, 111, 115 (eval conditions).
 * Hacer la query clicando en la imagen del modelo (mediante usemaps devueltos por graphviz).
 * Guardar queries: permitir a un usuario tener sus queries habituales.
 * Test
 * Documentación:
    - meta_querier/README

Meta WebService
-------------
  * Implementar método para insertar datos a partir de un xml (que infiera las clases a las que pertenecen
 los datos y sus atributos y relaciones). Debe generar error y rollback si los datos no son consistentes 
 con la bd. 
 * ¿Finder que a partir de un xml te responda con los datos que cumplen dicha condición?
 * Documentación.

meta-rails gem
-------------
 * Integrar el plugin "Acts As Authenticated" (http://technoweenie.stikipad.com/plugins/show/Acts+as+Authenticated),
   y configurarlo automáticamente.
 * Definir exactamente la funcionalidad y los parámetros del script.
 * Crear el script.
 * Hacer que la gem instale el script en el path del usuario.
 * Documentación

Web
----
 OK! Revisar versión inglesa.
 OK! Hacer la versión en castellano.
 * Crear noticia en rubyforge de inicio del proyecto.
 
