<% model = actual_query[:model]; model_route << "#{model}_#{wide}" %>
<% key = "#{model_route.join("__")}" %>
<div id="<%="model-#{model}-#{deep}-#{wide}"%>" class="meta-querier-model meta-querier-deep-<%= deep %> meta-querier-wide-<%= wide %>">
<a name="<%= model_route.join("_") %>"><b>Model:</b></a> <%= model_name(model_route) %> <%= link_to_remote( image_tag("meta_rails/cross.png", :title=> "remove", :border => 0, :align => "top"),
                                        :update => "query-builder-div",
                                        :url => { :action => "remove_model",
                                                :condition_model => "#{key}" },
                                        :confirm => "This will remove the model #{model_name(model_route)} from the query.\n Are you sure?" ) %><br />
<%= "#{actual_query[:join_type].capitalize} join with #{parent}<br/>" if defined? parent and parent %>
<br/>

<% unless @activerecord_columns[model].empty? %>
    <%= link_to_function image_tag("meta_rails/add.png", :title=> "select attributes", :border => 0, :align => "top") + " Select attributes<br/>",
                         :id => "a-select-#{key}" do |page|
            #page.alert("still not implemented")
            page["div-select-#{key}"].toggle
            page["a-select-#{key}"].toggle
        end
    %>
    <div id="div-select-<%= key %>" style="display:none;">
        Attributes to query:
        <ul>
        <% @activerecord_columns[model].keys.each do |model_col| -%>
            <li><%= check_box_tag "select_columns[#{key}][]", model_col, actual_query[:select][model_col] %> <%= model_col %></li>
        <% end -%>
        </ul>
        <%= submit_tag "Change select attributes"%>
    </div>
    
    <%= link_to_function image_tag("meta_rails/add.png", :title=> "add conditions", :border => 0, :align => "top") + " Add conditions<br/>",
                         :id => "a-conditions-#{key}" do |page|
            page["div-conditions-#{key}"].toggle
            page["a-conditions-#{key}"].toggle
        end if actual_query[:conditions].empty?
    %>
    <div id="div-conditions-<%= key %>" style="<%= "display:none;" if actual_query[:conditions].empty? %>">
    <a name="#">Conditions:</a><br />
        <ul>
        <% unless actual_query[:conditions].empty? %>
        
            <% actual_query[:conditions].each_with_index do |ac, index| %>
                <li><%= "<b>#{ac[:cond_type]}</b>" if ac[:cond_type] %> <%= ac[:column]%> <%= ac[:op]%> <%= ac[:value]%>
                <%= link_to_remote( image_tag("meta_rails/remove.png", :title=> "remove condition", :border => 0, :align => "top"),
                                                :update => "query-builder-div",
                                                :url => { :action => "remove_condition",
                                                        :condition_model => "#{key}", :condition_index => index  },
                                                :confirm => "This will remove the condition from the query.\n Are you sure?" ) %></li>
            <% end %>
            <li>
                <% cond_types = ["OR", "AND"] %>
                <%= select :conditions_cond_type, "#{key}", cond_types, { :include_blank => true }  %>
        <% else %>
            <li>
        <% end %>
            <%= select :conditions_column, "#{key}", @activerecord_columns[model].keys, { :include_blank => true },
                            :onchange => "new Ajax.Request('/meta_querier/show_model_column_condition?column='+this.value+'&amp;model=#{model}&amp;key=#{key}&amp;model_route=#{model_route}&amp;deep=#{deep}&amp;wide=#{wide}', {asynchronous:true, evalScripts:true})" %>
            <% operations = ["==", "<=>", ">", "<", ">=", "<=", "=~"] %>
            <%= select :conditions_op_string, "#{key}", operations, { :include_blank => true },
                        :id => "#{key}_op_string", :style => "display: none;"  %>
            <% operations = ["==", "<=>", ">", "<", ">=", "<="] %>
            <%= select :conditions_op_integer, "#{key}", operations, { :include_blank => true },
                        :id => "#{key}_op_integer", :style => "display: none;"  %>
            <%= text_field :conditions_value, "#{key}", :id => "#{key}_tf", :style => "display: none;" %>
            <span id="<%= "#{key}_dt" %>" style="display: none;">
                <%= date_select :conditions_value_date, "#{key}", :order => [:day, :month, :year], :start_year => 0 %>
            </span>
            <%= hidden_field :conditions_c_type, "#{key}" %>
            <%= submit_tag "Add condition", :id => "#{key}_sb", :style => "display: none;" %>
        </ul>
    </div>
<% else %>
    Model without attributes.<br/><br/>
<% end %>


        <% 
        join_posibilities = @activerecord_associations[model].keys.collect {|k| k.to_s.classify } if @activerecord_associations[model]
        #join_posibilities -= actual_query[:join].collect {|j| j[:model]} if join_posibilities
        join_posibilities -= model_route
        %>
        <% if join_posibilities and !join_posibilities.empty? %>

            <%= link_to_function image_tag("meta_rails/add.png", :title=> "Add joins", :border => 0, :align => "top") + " Add joins<br/>",
                                 :id => "a-join-#{key}" do |page|
                    page["div-join-#{key}"].toggle
                    page["a-join-#{key}"].toggle
                end
            %>
            <div id="div-join-<%= key %>" style="display:none;">
            <a name="#">Join with:</a><br />
            <%= select :join, "#{key}", join_posibilities, { :include_blank => true }  %>
            <%= select :join_type, "#{key}", %w{inner left right}, { :include_blank => false, :default => "inner" }  %>
            <%= submit_tag "Add join" %><br />
            </div>
        <% end %>
<br/>

<% unless actual_query[:join].empty? %>
<em><a name="#">Actual Joins:</a></em>
    <% actual_query[:join].each do |aq| %>
        <%= render :partial => "query_builder_model", :locals => { :actual_query => aq, :deep => aq[:deep], :wide => aq[:wide], :model_route => model_route.dup, :parent => model } %>
    <% end %>
<% end %>
</div>